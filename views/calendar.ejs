<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <%- include ../partials/global-header.ejs %>
</head>
<body>
  <!-- Modals -->
  <!-- General Purpose Dialogues -->
  <% include ../partials/success-modal.ejs %>
  <!-- New Reservation Modal -->
  <%- include ../partials/navbar.ejs %>
  <div class="page-content">

    <div class="card w-25 p-3 float-right">
      <div class="card-body">
        <h5 class="card-title">Calendar</h5>
        <!-- <h6 class="card-subtitle mb-2 text-muted">Panel subtitle</h6> -->
        <p class="card-text">
          <form id="reservation-form" class="ajax-form" method="post" action="/reservations/new">
            <h1>View Options</h1>
            <select name="machine" id="machine-schedule">
              <% for (var i = 0; i < req.machines.length; i++ ) { %>
              <option value="<%= req.machines[i].id %>"><%= req.machines[i].name %></option>
              <% } %>
            </select>
            <input required id="date" class="calendar-date-picker" name="schedule[global][date]" type="date">
            <h1>New Reservation</h1>
            <label for="start-time">Start Time: </label>
            <input class="wicked-picker" required id="start-time" name="schedule[time][start]" type="time">
            <label for="end-time">End Time: </label>
            <input class="wicked-picker" required id="end-time" name="schedule[time][end]" type="time">
            <textarea style="width: 100%" name="justification" placeholder="Enter a reason here"></textarea>
            <!-- <div style="display: none" class="dialogue-box warn">
              <h2>Warning</h2>
              <p>Before you make this reservation, please make sure the end time is <b>after</b> the start time.</p>
            </div> -->
          </form>
        </p>
        <button type="button" class="btn btn-primary" data-dismiss="modal" id="res-create">Create Reservation</button>
      </div>
    </div>

     <script>
       $(document).ready(() => {
         $("#res-create").on("click", () => {
           ajaxForm.submit($("#reservation-form"))
         });
       })
     </script>

    <script>
      var start;
      var end;

      function checkTimeFields() {

        start = Math.floor(new Date($("#date").val() + " " + $("#start-time").val()).getTime() / 1000);
        end = Math.floor(new Date($("#date").val() + " " + $("#end-time").val()).getTime() / 1000);
        console.log(start);
        console.log(end);
        if (start >= end) {

          $(".warn").fadeIn();
          $(".submit-reservation").attr("disabled", true)

        } else {

          $(".warn").fadeOut();
          $(".submit-reservation").attr("disabled", false)

        }

      }

      $("#start-time").on('keyup', function () {
        checkTimeFields()
      });
      $("#end-time").on('keyup', function () {
        checkTimeFields()
      });
      $("form[action='/reservations/new']").on("success", () => {
        getSchedule($("#machine-schedule").val(), formatDate($(".calendar-date-picker").val()));
      })
    </script>
    <!-- Calendar itself is below -->
    <div class="calendar-panel" id="schedule"></div>
    <div class="calendar-panel" id="schedule-lines"></div>
  </div>

  <style>
    .reserve-collapsable {
      display: block !important;
      margin-top: 10px;
    }
  </style>
  
  <script src="/js/reservations.js"></script>

  <script>

    // submitting the form

    
    

    // collapsable menu

    var buttonState = 1;

    $(".reserve-collapsable").trigger("click")

    $(".reserve-collapsable").on("click", (event) => {

      if (buttonState == 0) {
        $(".reservation-form").css("display","none");
        $(".reserve-collapsable").html("Make a new Reservation")
        $(".calendar-panel").css("top","300px")
        buttonState++
      } else {
        $(".reservation-form").css("display","block");
        $(".reserve-collapsable").html("Cancel")
        $(".calendar-panel").css("top","550px")
        buttonState--
      }

      
      // console.log(this)

    });

    // Important variables
    // 1 minute = 0.5 pt

    var scale = 0.5
    var markerHeight = 24;

    // Format pages

    $("#schedule").css("height",(24*60*scale) + "px")
    $("#schedule-lines").css("height",(24*60*scale) + "px")

    for (var i = 0; i < 24; i++) {
      $("#schedule-lines").append("<hr class='time-divider' style='" + "top: " + (i*60*scale) + "px" + "'>")
      $("#schedule-lines").append("<p class='hour-marker' style='" + "top: " + ((i*60*scale) - (markerHeight * 0.5)) + "px" + "' height='" + markerHeight + "px" + "'>" + i + "</p>")
    }

    var template;

    $.ajax({

      url: "/templates/schedule-block.html",
      method: "get",
      success: function(data) {

        template = data;
        $("#machine-schedule").css("display","inline");

      }

    });

    var startMins;
    var endMins;

    function getSchedule(id, date) {

      $.ajax({
        url: "/schedule/" + id + "/" + date,
        method: "get",
        success: function(data) {

          console.log(data)

          $("#schedule").empty();

          var startDate;
          var endDate;
          var displayText;

          for (var i = 0; i < data.length; i++) {

            startMins = (new Date(data[i].start * 1000).getHours()*60) + new Date(data[i].start * 1000).getMinutes();
            endMins = (new Date(data[i].end * 1000).getHours()*60) + new Date(data[i].end * 1000 ).getMinutes();
            duration = endMins-startMins;

            if (duration >= 60) {
              displayText = "block"
            } else {
              displayText = "none"
            }

            startDate = new Date(data[i].start * 1000)
            endDate = new Date(data[i].end * 1000)

            // scale

            $("#schedule").append(Mustache.to_html(template, { 
              name: data[i].username, 
              startHours: startDate.getHours(),
              startMinutes: leadingZeroes(startDate.getMinutes()),
              endHours: endDate.getHours(),
              endMinutes: leadingZeroes(endDate.getMinutes()),
              height: (duration * scale) + "px",
              top: (startMins * scale) + "px",
              displayText: displayText
            }));
          }

        } 
      });

    }

    $(".calendar-date-picker").on("change", function() {

      console.log("changing...")
      getSchedule($("#machine-schedule").val(),formatDate($(this).val()));

    })

  </script>

</body>
</html>